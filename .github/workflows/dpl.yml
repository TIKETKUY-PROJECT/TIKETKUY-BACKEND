name: tiketkuy CI

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.Js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Installing dependencies
        run: npm install --legacy-peer-deps
      - name: Build code
        run: npm run build

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.Js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Installing dependencies
        run: npm install --legacy-peer-deps
      - name: Run test
        run: npm run test:cov

  database-migration:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.Js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Installing dependencies
        run: npm install --legacy-peer-deps
      - name: Run migration
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{secrets.DATABASE_URL}}
    if: github.ref == 'refs/heads/main'

  publish:
    runs-on: ubuntu-latest
    needs: database-migration
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.Js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_REPOSITORY}}:latest
          build-args: |
            NODE_ENV=production
            DATABASE_URL=${{secrets.DATABASE_URL}}
            JWT_SECRET=${{secrets.JWT_SECRET}}
            SALT_ROUNDS=${{secrets.SALT_ROUNDS}}
          no-cache: true
    if: github.ref == 'refs/heads/main'
